#include "polynomial_expansion.h"

void PolynomialExpansion::exp_rec_sin( Op *a ) {
    Op *ch_0 = a->func_data()->children[0]; exp_rec( ch_0 ); const Ex *r_0 = reinterpret_cast<const Ex *>( ch_0->additional_info );
    if ( ch_0==NULL ) {
        a->additional_info = NULL;
    } else {
        r_0 = complete_if_necessary( r_0, ch_0 );
        Ex *r = tmp_vec.get_room_for( nb_elements );
        a->additional_info = reinterpret_cast<Op *>( r );
        //
        switch ( nb_elements ) {
            case 1: {
                Ex R_0 = r_0[0]; R_0 = sin(R_0); r[0] = R_0; 
                break;
            }
            case 2: {
                Ex R_0 = r_0[1]; Ex R_1 = r_0[0]; Ex R_2 = cos(R_1); R_0 = R_2*R_0;
                r[1] = R_0; R_1 = sin(R_1); r[0] = R_1; 
                break;
            }
            case 3: {
                Ex R_0 = r_0[2]; Ex R_1 = r_0[1]; Ex R_2 = pow(R_1,2); Ex R_3 = r_0[0];
                Ex R_4 = cos(R_3); R_0 = R_4*R_0; R_0 = Rationnal(2,1)*R_0; R_1 = R_4*R_1;
                r[1] = R_1; R_3 = sin(R_3); r[0] = R_3; R_2 = R_3*R_2;
                R_2 = Rationnal(-1,1)*R_2; R_2 = R_0+R_2; R_2 = Rationnal(1,2)*R_2; r[2] = R_2;
                break;
            }
            case 4: {
                Ex R_0 = r_0[3]; Ex R_1 = r_0[2]; Ex R_2 = r_0[1]; Ex R_3 = pow(R_2,2);
                Ex R_4 = r_0[0]; Ex R_5 = cos(R_4); R_0 = R_5*R_0; R_0 = Rationnal(6,1)*R_0;
                Ex R_6 = R_5*R_3; R_6 = Rationnal(-1,1)*R_6; Ex R_7 = R_5*R_1; R_7 = Rationnal(2,1)*R_7;
                R_5 = R_5*R_2; r[1] = R_5; R_4 = sin(R_4); r[0] = R_4;
                R_1 = R_4*R_1; R_1 = Rationnal(-6,1)*R_1; R_6 = R_1+R_6; R_6 = R_2*R_6;
                R_0 = R_6+R_0; R_0 = Rationnal(1,6)*R_0; r[3] = R_0; R_3 = R_4*R_3;
                R_3 = Rationnal(-1,1)*R_3; R_3 = R_7+R_3; R_3 = Rationnal(1,2)*R_3; r[2] = R_3;
                break;
            }
            case 5: {
                Ex R_0 = r_0[4]; Ex R_1 = r_0[3]; Ex R_2 = Rationnal(12,1)*R_1; Ex R_3 = r_0[2];
                Ex R_4 = r_0[1]; Ex R_5 = pow(R_4,3); R_5 = Rationnal(-1,1)*R_5; R_2 = R_5+R_2;
                R_5 = R_3*R_4; Ex R_6 = pow(R_4,2); Ex R_7 = r_0[0]; Ex R_8 = cos(R_7);
                R_5 = R_8*R_5; R_5 = Rationnal(8,1)*R_5; R_0 = R_8*R_0; R_0 = Rationnal(24,1)*R_0;
                Ex R_9 = R_8*R_1; R_9 = Rationnal(6,1)*R_9; Ex R_10 = R_8*R_6; Ex R_11 = Rationnal(-1,1)*R_10;
                Ex R_12 = R_8*R_3; R_12 = Rationnal(2,1)*R_12; R_8 = R_8*R_4; r[1] = R_8;
                R_7 = sin(R_7); r[0] = R_7; R_2 = R_7*R_2; R_2 = R_5+R_2;
                R_2 = R_4*R_2; R_5 = R_7*R_4; R_5 = R_1*R_5; R_5 = Rationnal(-12,1)*R_5;
                R_1 = R_7*R_3; R_8 = Rationnal(4,1)*R_1; R_8 = R_10+R_8; R_8 = R_3*R_8;
                R_8 = Rationnal(2,1)*R_8; R_8 = R_2+R_8; R_8 = Rationnal(-1,1)*R_8; R_2 = Rationnal(2,1)*R_1;
                R_2 = R_10+R_2; R_2 = R_3*R_2; R_2 = Rationnal(-2,1)*R_2; R_5 = R_2+R_5;
                R_5 = R_0+R_5; R_8 = R_5+R_8; R_8 = Rationnal(1,24)*R_8; r[4] = R_8;
                R_1 = Rationnal(-6,1)*R_1; R_11 = R_1+R_11; R_11 = R_4*R_11; R_9 = R_11+R_9;
                R_9 = Rationnal(1,6)*R_9; r[3] = R_9; R_6 = R_7*R_6; R_6 = Rationnal(-1,1)*R_6;
                R_6 = R_12+R_6; R_6 = Rationnal(1,2)*R_6; r[2] = R_6; 
                break;
            }
            case 6: {
                Ex R_0 = r_0[5]; Ex R_1 = r_0[4]; Ex R_2 = r_0[3]; Ex R_3 = Rationnal(12,1)*R_2;
                Ex R_4 = r_0[2]; Ex R_5 = pow(R_4,2); R_5 = Rationnal(4,1)*R_5; Ex R_6 = r_0[1];
                Ex R_7 = R_2*R_6; R_7 = Rationnal(6,1)*R_7; R_5 = R_7+R_5; R_7 = pow(R_6,3);
                R_7 = Rationnal(-1,1)*R_7; R_3 = R_7+R_3; R_7 = R_4*R_6; Ex R_8 = pow(R_6,2);
                Ex R_9 = r_0[0]; Ex R_10 = cos(R_9); R_5 = R_10*R_5; R_5 = Rationnal(4,1)*R_5;
                R_0 = R_10*R_0; R_0 = Rationnal(120,1)*R_0; R_7 = R_10*R_7; R_7 = Rationnal(8,1)*R_7;
                Ex R_11 = R_10*R_1; R_11 = Rationnal(24,1)*R_11; Ex R_12 = R_10*R_2; Ex R_13 = Rationnal(12,1)*R_12;
                R_12 = Rationnal(6,1)*R_12; Ex R_14 = R_10*R_8; Ex R_15 = Rationnal(-1,1)*R_14; Ex R_16 = R_10*R_4;
                Ex R_17 = Rationnal(6,1)*R_16; R_16 = Rationnal(2,1)*R_16; R_10 = R_10*R_6; r[1] = R_10;
                R_9 = sin(R_9); r[0] = R_9; R_10 = R_9*R_1; R_10 = Rationnal(48,1)*R_10;
                R_5 = R_10+R_5; R_10 = R_9*R_2; R_10 = Rationnal(6,1)*R_10; R_3 = R_9*R_3;
                R_3 = R_7+R_3; R_7 = R_4*R_3; R_7 = Rationnal(4,1)*R_7; R_3 = R_6*R_3;
                Ex R_18 = R_9*R_6; R_1 = R_1*R_18; R_1 = Rationnal(-72,1)*R_1; R_1 = R_0+R_1;
                R_18 = R_2*R_18; R_18 = Rationnal(-12,1)*R_18; R_0 = R_9*R_4; Ex R_19 = Rationnal(-14,1)*R_0;
                R_19 = R_15+R_19; R_19 = R_6*R_19; R_19 = R_13+R_19; R_19 = R_6*R_19;
                R_19 = R_5+R_19; R_19 = R_6*R_19; R_19 = R_7+R_19; R_7 = Rationnal(4,1)*R_0;
                R_7 = R_14+R_7; R_5 = R_2*R_7; R_5 = Rationnal(6,1)*R_5; R_19 = R_5+R_19;
                R_19 = Rationnal(-1,1)*R_19; R_7 = R_4*R_7; R_7 = Rationnal(2,1)*R_7; R_7 = R_3+R_7;
                R_7 = Rationnal(-1,1)*R_7; R_3 = Rationnal(2,1)*R_0; R_3 = R_14+R_3; R_2 = R_2*R_3;
                R_2 = Rationnal(-18,1)*R_2; R_1 = R_2+R_1; R_3 = R_4*R_3; R_3 = Rationnal(-2,1)*R_3;
                R_18 = R_3+R_18; R_18 = R_11+R_18; R_7 = R_18+R_7; R_7 = Rationnal(1,24)*R_7;
                r[4] = R_7; R_0 = Rationnal(-6,1)*R_0; R_15 = R_0+R_15; R_15 = R_6*R_15;
                R_12 = R_15+R_12; R_12 = Rationnal(1,6)*R_12; r[3] = R_12; R_8 = R_9*R_8;
                R_8 = Rationnal(-1,1)*R_8; R_17 = R_8+R_17; R_17 = R_6*R_17; R_17 = R_10+R_17;
                R_17 = R_4*R_17; R_17 = Rationnal(-2,1)*R_17; R_1 = R_17+R_1; R_19 = R_1+R_19;
                R_19 = Rationnal(1,120)*R_19; r[5] = R_19; R_8 = R_16+R_8; R_8 = Rationnal(1,2)*R_8;
                r[2] = R_8; 
                break;
            }
            #ifdef WANT_SERIES_789
            case 7: {
                Ex R_0 = r_0[6]; Ex R_1 = r_0[5]; Ex R_2 = r_0[4]; Ex R_3 = r_0[3];
                Ex R_4 = Rationnal(12,1)*R_3; Ex R_5 = r_0[2]; Ex R_6 = R_3*R_5; R_6 = Rationnal(36,1)*R_6;
                Ex R_7 = pow(R_5,2); Ex R_8 = Rationnal(-4,1)*R_7; R_7 = Rationnal(4,1)*R_7; Ex R_9 = r_0[1];
                Ex R_10 = R_2*R_9; R_10 = Rationnal(24,1)*R_10; R_6 = R_10+R_6; R_10 = R_3*R_9;
                Ex R_11 = Rationnal(-12,1)*R_10; R_11 = R_8+R_11; R_10 = Rationnal(6,1)*R_10; R_7 = R_10+R_7;
                R_10 = pow(R_9,3); R_10 = Rationnal(-1,1)*R_10; R_4 = R_10+R_4; R_10 = R_5*R_9;
                R_8 = pow(R_9,2); Ex R_12 = r_0[0]; Ex R_13 = cos(R_12); R_6 = R_13*R_6;
                R_6 = Rationnal(4,1)*R_6; R_0 = R_13*R_0; R_0 = Rationnal(720,1)*R_0; R_7 = R_13*R_7;
                R_7 = Rationnal(4,1)*R_7; Ex R_14 = R_13*R_1; R_14 = Rationnal(120,1)*R_14; R_10 = R_13*R_10;
                R_10 = Rationnal(8,1)*R_10; Ex R_15 = R_13*R_2; R_15 = Rationnal(24,1)*R_15; Ex R_16 = R_13*R_3;
                Ex R_17 = Rationnal(24,1)*R_16; Ex R_18 = Rationnal(12,1)*R_16; R_16 = Rationnal(6,1)*R_16; Ex R_19 = R_13*R_8;
                Ex R_20 = Rationnal(-1,1)*R_19; Ex R_21 = R_13*R_5; Ex R_22 = Rationnal(10,1)*R_21; Ex R_23 = Rationnal(6,1)*R_21;
                R_21 = Rationnal(2,1)*R_21; R_13 = R_13*R_9; r[1] = R_13; R_12 = sin(R_12);
                r[0] = R_12; R_11 = R_12*R_11; R_13 = R_12*R_1; R_13 = Rationnal(240,1)*R_13;
                Ex R_24 = R_12*R_2; Ex R_25 = Rationnal(24,1)*R_24; R_24 = Rationnal(48,1)*R_24; R_7 = R_24+R_7;
                R_24 = R_12*R_3; Ex R_26 = Rationnal(18,1)*R_24; R_24 = Rationnal(6,1)*R_24; R_4 = R_12*R_4;
                R_4 = R_10+R_4; R_10 = R_3*R_4; R_10 = Rationnal(18,1)*R_10; Ex R_27 = R_5*R_4;
                R_27 = Rationnal(4,1)*R_27; R_4 = R_9*R_4; Ex R_28 = R_12*R_9; R_1 = R_1*R_28;
                R_1 = Rationnal(-480,1)*R_1; Ex R_29 = R_2*R_28; R_29 = Rationnal(-72,1)*R_29; R_29 = R_14+R_29;
                R_28 = R_3*R_28; R_28 = Rationnal(-12,1)*R_28; R_14 = R_12*R_5; Ex R_30 = Rationnal(6,1)*R_14;
                R_30 = R_19+R_30; R_30 = R_5*R_30; R_30 = Rationnal(4,1)*R_30; Ex R_31 = Rationnal(-10,1)*R_14;
                R_31 = R_20+R_31; R_31 = R_9*R_31; R_31 = R_17+R_31; R_31 = R_9*R_31;
                R_17 = Rationnal(-14,1)*R_14; R_17 = R_20+R_17; R_17 = R_9*R_17; R_17 = R_18+R_17;
                R_17 = R_9*R_17; R_17 = R_7+R_17; R_7 = R_5*R_17; R_7 = Rationnal(6,1)*R_7;
                R_7 = R_10+R_7; R_17 = R_9*R_17; R_17 = R_27+R_17; R_27 = Rationnal(4,1)*R_14;
                R_27 = R_19+R_27; R_10 = R_2*R_27; R_10 = Rationnal(24,1)*R_10; R_18 = R_3*R_27;
                R_18 = Rationnal(6,1)*R_18; R_17 = R_18+R_17; R_17 = Rationnal(-1,1)*R_17; R_27 = R_5*R_27;
                R_18 = Rationnal(-2,1)*R_27; R_18 = R_15+R_18; R_11 = R_18+R_11; R_11 = Rationnal(4,1)*R_11;
                R_27 = Rationnal(2,1)*R_27; R_27 = R_4+R_27; R_27 = Rationnal(-1,1)*R_27; R_4 = Rationnal(2,1)*R_14;
                R_4 = R_19+R_4; R_2 = R_2*R_4; R_2 = Rationnal(-144,1)*R_2; R_19 = R_3*R_4;
                R_19 = Rationnal(-18,1)*R_19; R_29 = R_19+R_29; R_4 = R_5*R_4; R_4 = Rationnal(-2,1)*R_4;
                R_28 = R_4+R_28; R_28 = R_15+R_28; R_27 = R_28+R_27; R_27 = Rationnal(1,24)*R_27;
                r[4] = R_27; R_14 = Rationnal(-6,1)*R_14; R_20 = R_14+R_20; R_20 = R_9*R_20;
                R_16 = R_20+R_16; R_16 = Rationnal(1,6)*R_16; r[3] = R_16; R_8 = R_12*R_8;
                R_8 = Rationnal(-1,1)*R_8; R_22 = R_8+R_22; R_22 = R_9*R_22; R_22 = R_26+R_22;
                R_22 = R_9*R_22; R_30 = R_22+R_30; R_30 = Rationnal(-1,1)*R_30; R_11 = R_30+R_11;
                R_11 = R_9*R_11; R_23 = R_8+R_23; R_30 = R_5*R_23; R_30 = Rationnal(2,1)*R_30;
                R_30 = R_25+R_30; R_31 = R_30+R_31; R_31 = R_5*R_31; R_31 = Rationnal(-2,1)*R_31;
                R_23 = R_9*R_23; R_23 = R_24+R_23; R_24 = R_3*R_23; R_24 = Rationnal(-24,1)*R_24;
                R_31 = R_24+R_31; R_31 = R_1+R_31; R_31 = R_0+R_31; R_31 = R_2+R_31;
                R_23 = R_5*R_23; R_23 = Rationnal(-2,1)*R_23; R_29 = R_23+R_29; R_17 = R_29+R_17;
                R_17 = Rationnal(1,120)*R_17; r[5] = R_17; R_8 = R_21+R_8; R_3 = R_3*R_8;
                R_3 = Rationnal(12,1)*R_3; R_3 = R_13+R_3; R_6 = R_3+R_6; R_11 = R_6+R_11;
                R_11 = R_9*R_11; R_11 = R_10+R_11; R_7 = R_11+R_7; R_7 = Rationnal(-1,1)*R_7;
                R_7 = R_31+R_7; R_7 = Rationnal(1,720)*R_7; r[6] = R_7; R_8 = Rationnal(1,2)*R_8;
                r[2] = R_8; 
                break;
            }
            case 8: {
                Ex R_0 = r_0[7]; Ex R_1 = r_0[6]; Ex R_2 = r_0[5]; Ex R_3 = r_0[4];
                Ex R_4 = r_0[3]; Ex R_5 = Rationnal(18,1)*R_4; Ex R_6 = pow(R_4,2); R_6 = Rationnal(432,1)*R_6;
                Ex R_7 = Rationnal(12,1)*R_4; Ex R_8 = r_0[2]; Ex R_9 = R_3*R_8; R_9 = Rationnal(768,1)*R_9;
                Ex R_10 = R_4*R_8; R_10 = Rationnal(36,1)*R_10; Ex R_11 = pow(R_8,2); Ex R_12 = Rationnal(-4,1)*R_11;
                R_11 = Rationnal(4,1)*R_11; Ex R_13 = r_0[1]; Ex R_14 = R_2*R_13; R_14 = Rationnal(720,1)*R_14;
                R_14 = R_9+R_14; R_14 = R_6+R_14; R_6 = R_3*R_13; R_6 = Rationnal(24,1)*R_6;
                R_10 = R_6+R_10; R_6 = R_4*R_13; R_9 = Rationnal(-12,1)*R_6; R_9 = R_12+R_9;
                R_6 = Rationnal(6,1)*R_6; R_11 = R_6+R_11; R_6 = pow(R_13,3); R_6 = Rationnal(-1,1)*R_6;
                R_5 = R_6+R_5; R_7 = R_6+R_7; R_6 = R_8*R_13; R_12 = pow(R_13,2);
                Ex R_15 = r_0[0]; Ex R_16 = cos(R_15); Ex R_17 = R_16*R_9; R_14 = R_16*R_14;
                R_0 = R_16*R_0; R_0 = Rationnal(5040,1)*R_0; Ex R_18 = R_16*R_10; R_18 = Rationnal(4,1)*R_18;
                Ex R_19 = R_16*R_1; R_19 = Rationnal(720,1)*R_19; R_11 = R_16*R_11; R_11 = Rationnal(4,1)*R_11;
                Ex R_20 = R_16*R_2; R_20 = Rationnal(120,1)*R_20; R_6 = R_16*R_6; R_6 = Rationnal(8,1)*R_6;
                Ex R_21 = R_16*R_3; Ex R_22 = Rationnal(120,1)*R_21; R_21 = Rationnal(24,1)*R_21; Ex R_23 = R_16*R_4;
                Ex R_24 = Rationnal(48,1)*R_23; Ex R_25 = Rationnal(42,1)*R_23; Ex R_26 = Rationnal(24,1)*R_23; Ex R_27 = Rationnal(12,1)*R_23;
                R_23 = Rationnal(6,1)*R_23; Ex R_28 = R_16*R_12; Ex R_29 = Rationnal(-2,1)*R_28; Ex R_30 = Rationnal(-1,1)*R_28;
                Ex R_31 = R_16*R_8; Ex R_32 = Rationnal(20,1)*R_31; Ex R_33 = Rationnal(-14,1)*R_31; Ex R_34 = Rationnal(10,1)*R_31;
                Ex R_35 = Rationnal(6,1)*R_31; R_31 = Rationnal(2,1)*R_31; R_16 = R_16*R_13; r[1] = R_16;
                R_15 = sin(R_15); r[0] = R_15; R_16 = R_15*R_1; R_16 = Rationnal(1440,1)*R_16;
                R_5 = R_15*R_5; R_5 = R_6+R_5; R_5 = R_8*R_5; R_10 = R_15*R_10;
                R_5 = R_10+R_5; R_5 = Rationnal(-2,1)*R_5; R_9 = R_15*R_9; R_10 = R_15*R_2;
                Ex R_36 = Rationnal(120,1)*R_10; R_10 = Rationnal(240,1)*R_10; Ex R_37 = R_15*R_3; Ex R_38 = Rationnal(72,1)*R_37;
                Ex R_39 = Rationnal(-48,1)*R_37; R_17 = R_39+R_17; R_17 = R_13*R_17; R_39 = Rationnal(24,1)*R_37;
                R_37 = Rationnal(48,1)*R_37; R_11 = R_37+R_11; R_37 = R_15*R_4; Ex R_40 = Rationnal(-54,1)*R_37;
                Ex R_41 = Rationnal(18,1)*R_37; R_37 = Rationnal(6,1)*R_37; R_7 = R_15*R_7; R_7 = R_6+R_7;
                R_6 = R_3*R_7; R_6 = Rationnal(96,1)*R_6; Ex R_42 = R_4*R_7; R_42 = Rationnal(18,1)*R_42;
                Ex R_43 = R_8*R_7; R_43 = Rationnal(4,1)*R_43; R_7 = R_13*R_7; Ex R_44 = R_15*R_13;
                R_1 = R_1*R_44; R_1 = Rationnal(-3600,1)*R_1; Ex R_45 = R_2*R_44; R_45 = Rationnal(-480,1)*R_45;
                Ex R_46 = R_3*R_44; R_46 = Rationnal(-72,1)*R_46; R_46 = R_20+R_46; R_44 = R_4*R_44;
                R_44 = Rationnal(-12,1)*R_44; Ex R_47 = R_15*R_8; Ex R_48 = Rationnal(-8,1)*R_47; R_48 = R_30+R_48;
                R_48 = R_13*R_48; R_24 = R_48+R_24; R_24 = R_13*R_24; R_24 = R_38+R_24;
                R_38 = Rationnal(-20,1)*R_47; R_38 = R_29+R_38; R_38 = R_13*R_38; R_38 = R_25+R_38;
                R_38 = R_8*R_38; R_38 = Rationnal(2,1)*R_38; R_25 = Rationnal(6,1)*R_47; R_25 = R_28+R_25;
                R_29 = R_4*R_25; R_29 = Rationnal(12,1)*R_29; R_25 = R_8*R_25; R_25 = Rationnal(4,1)*R_25;
                R_48 = Rationnal(-10,1)*R_47; R_48 = R_30+R_48; Ex R_49 = R_8*R_48; R_49 = Rationnal(2,1)*R_49;
                R_22 = R_49+R_22; R_48 = R_13*R_48; R_48 = R_26+R_48; R_48 = R_13*R_48;
                R_26 = Rationnal(-14,1)*R_47; R_26 = R_30+R_26; R_26 = R_13*R_26; R_26 = R_27+R_26;
                R_26 = R_13*R_26; R_26 = R_11+R_26; R_11 = R_4*R_26; R_11 = Rationnal(36,1)*R_11;
                R_27 = R_8*R_26; R_27 = Rationnal(6,1)*R_27; R_27 = R_42+R_27; R_26 = R_13*R_26;
                R_26 = R_43+R_26; R_43 = Rationnal(4,1)*R_47; R_43 = R_28+R_43; R_42 = R_2*R_43;
                R_42 = Rationnal(120,1)*R_42; R_49 = R_3*R_43; R_49 = Rationnal(24,1)*R_49; Ex R_50 = R_4*R_43;
                Ex R_51 = Rationnal(-6,1)*R_50; R_51 = R_20+R_51; R_17 = R_51+R_17; R_5 = R_17+R_5;
                R_5 = R_13*R_5; R_5 = Rationnal(4,1)*R_5; R_50 = Rationnal(6,1)*R_50; R_26 = R_50+R_26;
                R_26 = Rationnal(-1,1)*R_26; R_43 = R_8*R_43; R_50 = Rationnal(-2,1)*R_43; R_50 = R_21+R_50;
                R_9 = R_50+R_9; R_50 = R_8*R_9; R_50 = Rationnal(8,1)*R_50; R_9 = Rationnal(4,1)*R_9;
                R_43 = Rationnal(2,1)*R_43; R_43 = R_7+R_43; R_43 = Rationnal(-1,1)*R_43; R_7 = Rationnal(2,1)*R_47;
                R_7 = R_28+R_7; R_2 = R_2*R_7; R_2 = Rationnal(-1200,1)*R_2; R_28 = R_3*R_7;
                R_28 = Rationnal(-144,1)*R_28; R_17 = R_4*R_7; R_17 = Rationnal(-18,1)*R_17; R_46 = R_17+R_46;
                R_7 = R_8*R_7; R_7 = Rationnal(-2,1)*R_7; R_44 = R_7+R_44; R_44 = R_21+R_44;
                R_43 = R_44+R_43; R_43 = Rationnal(1,24)*R_43; r[4] = R_43; R_47 = Rationnal(-6,1)*R_47;
                R_30 = R_47+R_30; R_30 = R_13*R_30; R_23 = R_30+R_23; R_30 = R_4*R_23;
                R_30 = Rationnal(12,1)*R_30; R_23 = Rationnal(1,6)*R_23; r[3] = R_23; R_12 = R_15*R_12;
                R_15 = Rationnal(-8,1)*R_12; R_32 = R_15+R_32; R_32 = R_8*R_32; R_32 = R_24+R_32;
                R_32 = R_13*R_32; R_33 = R_12+R_33; R_33 = R_13*R_33; R_33 = R_40+R_33;
                R_33 = R_13*R_33; R_33 = R_22+R_33; R_33 = R_13*R_33; R_12 = Rationnal(-1,1)*R_12;
                R_34 = R_12+R_34; R_34 = R_13*R_34; R_34 = R_41+R_34; R_41 = R_8*R_34;
                R_41 = Rationnal(6,1)*R_41; R_32 = R_41+R_32; R_32 = R_29+R_32; R_32 = R_13*R_32;
                R_34 = R_13*R_34; R_25 = R_34+R_25; R_34 = R_8*R_25; R_34 = Rationnal(2,1)*R_34;
                R_34 = R_32+R_34; R_34 = Rationnal(-1,1)*R_34; R_16 = R_34+R_16; R_25 = Rationnal(-1,1)*R_25;
                R_9 = R_25+R_9; R_9 = R_13*R_9; R_35 = R_12+R_35; R_25 = R_4*R_35;
                R_25 = Rationnal(6,1)*R_25; R_25 = R_36+R_25; R_33 = R_25+R_33; R_38 = R_33+R_38;
                R_38 = R_8*R_38; R_38 = Rationnal(-2,1)*R_38; R_33 = R_8*R_35; R_33 = Rationnal(2,1)*R_33;
                R_33 = R_39+R_33; R_48 = R_33+R_48; R_33 = R_4*R_48; R_33 = Rationnal(-30,1)*R_33;
                R_48 = R_8*R_48; R_48 = Rationnal(-2,1)*R_48; R_35 = R_13*R_35; R_35 = R_37+R_35;
                R_37 = R_3*R_35; R_37 = Rationnal(-240,1)*R_37; R_37 = R_2+R_37; R_37 = R_0+R_37;
                R_37 = R_1+R_37; R_37 = R_33+R_37; R_37 = R_38+R_37; R_38 = R_4*R_35;
                R_38 = Rationnal(-24,1)*R_38; R_48 = R_38+R_48; R_48 = R_45+R_48; R_48 = R_19+R_48;
                R_48 = R_28+R_48; R_35 = R_8*R_35; R_35 = Rationnal(-2,1)*R_35; R_46 = R_35+R_46;
                R_26 = R_46+R_26; R_26 = Rationnal(1,120)*R_26; r[5] = R_26; R_12 = R_31+R_12;
                R_3 = R_3*R_12; R_3 = Rationnal(48,1)*R_3; R_16 = R_3+R_16; R_16 = R_30+R_16;
                R_16 = R_50+R_16; R_16 = R_5+R_16; R_16 = R_14+R_16; R_16 = R_13*R_16;
                R_16 = R_42+R_16; R_16 = R_11+R_16; R_4 = R_4*R_12; R_4 = Rationnal(12,1)*R_4;
                R_4 = R_10+R_4; R_18 = R_4+R_18; R_9 = R_18+R_9; R_8 = R_8*R_9;
                R_8 = Rationnal(8,1)*R_8; R_8 = R_6+R_8; R_16 = R_8+R_16; R_16 = Rationnal(-1,1)*R_16;
                R_16 = R_37+R_16; R_16 = Rationnal(1,5040)*R_16; r[7] = R_16; R_9 = R_13*R_9;
                R_9 = R_49+R_9; R_27 = R_9+R_27; R_27 = Rationnal(-1,1)*R_27; R_27 = R_48+R_27;
                R_27 = Rationnal(1,720)*R_27; r[6] = R_27; R_12 = Rationnal(1,2)*R_12; r[2] = R_12;
                break;
            }
            case 9: {
                Ex R_0 = r_0[8]; Ex R_1 = r_0[7]; Ex R_2 = r_0[6]; Ex R_3 = r_0[5];
                Ex R_4 = Rationnal(-360,1)*R_3; Ex R_5 = r_0[4]; Ex R_6 = Rationnal(-24,1)*R_5; Ex R_7 = r_0[3];
                Ex R_8 = Rationnal(-30,1)*R_7; Ex R_9 = R_5*R_7; Ex R_10 = Rationnal(18,1)*R_7; Ex R_11 = pow(R_7,2);
                Ex R_12 = Rationnal(108,1)*R_11; R_11 = Rationnal(432,1)*R_11; Ex R_13 = Rationnal(12,1)*R_7; Ex R_14 = r_0[2];
                Ex R_15 = R_3*R_14; R_15 = Rationnal(1200,1)*R_15; Ex R_16 = R_5*R_14; Ex R_17 = Rationnal(192,1)*R_16;
                R_16 = Rationnal(768,1)*R_16; Ex R_18 = R_7*R_14; Ex R_19 = Rationnal(-120,1)*R_18; R_18 = Rationnal(36,1)*R_18;
                Ex R_20 = pow(R_14,2); Ex R_21 = Rationnal(-8,1)*R_20; Ex R_22 = Rationnal(-80,1)*R_20; Ex R_23 = Rationnal(-4,1)*R_20;
                R_20 = Rationnal(4,1)*R_20; Ex R_24 = r_0[1]; Ex R_25 = R_2*R_24; R_25 = R_9+R_25;
                R_25 = Rationnal(1440,1)*R_25; R_25 = R_15+R_25; R_15 = R_3*R_24; R_9 = Rationnal(120,1)*R_15;
                R_17 = R_9+R_17; R_12 = R_17+R_12; R_15 = Rationnal(720,1)*R_15; R_15 = R_16+R_15;
                R_15 = R_11+R_15; R_11 = R_5*R_24; R_16 = Rationnal(-144,1)*R_11; R_19 = R_16+R_19;
                R_11 = Rationnal(24,1)*R_11; R_18 = R_11+R_18; R_11 = R_7*R_24; R_16 = Rationnal(-24,1)*R_11;
                R_16 = R_21+R_16; R_21 = Rationnal(-420,1)*R_11; R_22 = R_21+R_22; R_21 = Rationnal(-12,1)*R_11;
                R_21 = R_23+R_21; R_23 = R_24*R_21; R_23 = Rationnal(-1,1)*R_23; R_4 = R_23+R_4;
                R_11 = Rationnal(6,1)*R_11; R_20 = R_11+R_20; R_11 = pow(R_24,3); R_23 = Rationnal(2,1)*R_11;
                R_23 = R_8+R_23; R_11 = Rationnal(-1,1)*R_11; R_10 = R_11+R_10; R_13 = R_11+R_13;
                R_11 = R_14*R_24; R_8 = pow(R_24,2); R_17 = R_8*R_14; R_17 = Rationnal(2,1)*R_17;
                R_6 = R_17+R_6; R_17 = r_0[0]; R_9 = cos(R_17); R_19 = R_9*R_19;
                R_25 = R_9*R_25; R_16 = R_9*R_16; R_22 = R_9*R_22; Ex R_26 = R_9*R_12;
                R_0 = R_9*R_0; R_0 = Rationnal(40320,1)*R_0; Ex R_27 = R_9*R_21; R_15 = R_9*R_15;
                Ex R_28 = R_9*R_1; R_28 = Rationnal(5040,1)*R_28; Ex R_29 = R_9*R_18; R_29 = Rationnal(4,1)*R_29;
                Ex R_30 = R_9*R_2; R_30 = Rationnal(720,1)*R_30; R_20 = R_9*R_20; Ex R_31 = Rationnal(4,1)*R_20;
                Ex R_32 = R_9*R_3; Ex R_33 = Rationnal(240,1)*R_32; Ex R_34 = Rationnal(3600,1)*R_32; Ex R_35 = Rationnal(720,1)*R_32;
                R_32 = Rationnal(120,1)*R_32; R_11 = R_9*R_11; Ex R_36 = Rationnal(-16,1)*R_11; R_11 = Rationnal(8,1)*R_11;
                Ex R_37 = R_9*R_5; Ex R_38 = Rationnal(864,1)*R_37; Ex R_39 = Rationnal(264,1)*R_37; Ex R_40 = Rationnal(288,1)*R_37;
                Ex R_41 = Rationnal(120,1)*R_37; R_37 = Rationnal(24,1)*R_37; Ex R_42 = R_9*R_7; Ex R_43 = Rationnal(60,1)*R_42;
                Ex R_44 = Rationnal(-96,1)*R_42; Ex R_45 = Rationnal(48,1)*R_42; Ex R_46 = Rationnal(42,1)*R_42; Ex R_47 = Rationnal(24,1)*R_42;
                Ex R_48 = Rationnal(12,1)*R_42; R_42 = Rationnal(6,1)*R_42; Ex R_49 = R_9*R_8; Ex R_50 = Rationnal(-72,1)*R_49;
                Ex R_51 = Rationnal(-6,1)*R_49; Ex R_52 = Rationnal(-30,1)*R_49; Ex R_53 = Rationnal(-3,1)*R_49; Ex R_54 = Rationnal(-2,1)*R_49;
                Ex R_55 = Rationnal(-1,1)*R_49; Ex R_56 = R_9*R_14; Ex R_57 = Rationnal(-10,1)*R_56; Ex R_58 = Rationnal(8,1)*R_56;
                Ex R_59 = Rationnal(4,1)*R_56; Ex R_60 = Rationnal(-278,1)*R_56; Ex R_61 = Rationnal(-42,1)*R_56; Ex R_62 = Rationnal(-28,1)*R_56;
                Ex R_63 = Rationnal(20,1)*R_56; Ex R_64 = Rationnal(-14,1)*R_56; Ex R_65 = Rationnal(10,1)*R_56; Ex R_66 = Rationnal(6,1)*R_56;
                R_56 = Rationnal(2,1)*R_56; R_9 = R_9*R_24; r[1] = R_9; R_9 = R_9*R_10;
                R_17 = sin(R_17); r[0] = R_17; R_6 = R_17*R_6; R_6 = Rationnal(-3,1)*R_6;
                R_9 = R_6+R_9; R_23 = R_17*R_23; R_23 = R_36+R_23; R_23 = R_7*R_23;
                R_23 = Rationnal(6,1)*R_23; R_4 = R_17*R_4; R_19 = R_4+R_19; R_19 = R_24*R_19;
                R_12 = R_17*R_12; R_12 = Rationnal(-3,1)*R_12; R_4 = R_17*R_1; R_4 = Rationnal(10080,1)*R_4;
                R_36 = R_17*R_2; R_6 = Rationnal(7200,1)*R_36; Ex R_67 = Rationnal(720,1)*R_36; R_36 = Rationnal(1440,1)*R_36;
                R_10 = R_17*R_10; R_10 = R_11+R_10; Ex R_68 = Rationnal(-1,1)*R_10; Ex R_69 = Rationnal(-4,1)*R_10;
                R_10 = R_14*R_10; R_18 = R_17*R_18; Ex R_70 = Rationnal(-3,1)*R_18; Ex R_71 = Rationnal(-40,1)*R_18;
                R_71 = R_34+R_71; R_10 = R_18+R_10; R_10 = Rationnal(-2,1)*R_10; R_21 = R_17*R_21;
                R_18 = Rationnal(24,1)*R_21; R_18 = R_38+R_18; R_38 = R_17*R_3; R_34 = Rationnal(360,1)*R_38;
                Ex R_72 = Rationnal(120,1)*R_38; R_38 = Rationnal(240,1)*R_38; Ex R_73 = R_17*R_5; Ex R_74 = Rationnal(-96,1)*R_73;
                R_16 = R_74+R_16; R_16 = R_24*R_16; R_74 = Rationnal(-1320,1)*R_73; Ex R_75 = Rationnal(-336,1)*R_73;
                Ex R_76 = Rationnal(72,1)*R_73; Ex R_77 = Rationnal(-48,1)*R_73; R_27 = R_77+R_27; R_77 = R_24*R_27;
                Ex R_78 = Rationnal(24,1)*R_73; R_73 = Rationnal(48,1)*R_73; R_31 = R_73+R_31; R_73 = R_17*R_7;
                Ex R_79 = Rationnal(-24,1)*R_73; Ex R_80 = Rationnal(-558,1)*R_73; R_80 = R_69+R_80; R_69 = Rationnal(-156,1)*R_73;
                Ex R_81 = Rationnal(-84,1)*R_73; Ex R_82 = Rationnal(-54,1)*R_73; Ex R_83 = Rationnal(18,1)*R_73; R_73 = Rationnal(6,1)*R_73;
                R_13 = R_17*R_13; R_13 = R_11+R_13; R_11 = R_3*R_13; R_11 = Rationnal(600,1)*R_11;
                Ex R_84 = Rationnal(-1,1)*R_13; R_84 = R_79+R_84; R_84 = R_24*R_84; Ex R_85 = R_5*R_13;
                R_85 = Rationnal(96,1)*R_85; Ex R_86 = R_7*R_13; R_86 = Rationnal(18,1)*R_86; Ex R_87 = R_14*R_13;
                R_87 = Rationnal(4,1)*R_87; R_13 = R_24*R_13; Ex R_88 = R_17*R_24; R_1 = R_1*R_88;
                R_1 = Rationnal(-30240,1)*R_1; Ex R_89 = R_2*R_88; R_89 = Rationnal(-3600,1)*R_89; Ex R_90 = R_3*R_88;
                R_90 = Rationnal(-480,1)*R_90; Ex R_91 = R_5*R_88; R_91 = Rationnal(-72,1)*R_91; R_91 = R_32+R_91;
                R_88 = R_7*R_88; R_88 = Rationnal(-12,1)*R_88; Ex R_92 = R_17*R_14; Ex R_93 = Rationnal(-336,1)*R_92;
                R_93 = R_50+R_93; R_93 = R_14*R_93; R_50 = Rationnal(-16,1)*R_92; R_50 = R_51+R_50;
                R_50 = R_14*R_50; R_50 = R_39+R_50; R_84 = R_50+R_84; R_84 = R_24*R_84;
                R_50 = Rationnal(-140,1)*R_92; R_52 = R_50+R_52; R_52 = R_7*R_52; R_52 = Rationnal(6,1)*R_52;
                R_52 = R_71+R_52; R_71 = Rationnal(-30,1)*R_92; R_71 = R_53+R_71; R_53 = R_24*R_71;
                R_53 = R_43+R_53; R_53 = R_7*R_53; R_53 = Rationnal(6,1)*R_53; R_71 = R_14*R_71;
                R_71 = Rationnal(2,1)*R_71; R_43 = Rationnal(18,1)*R_92; R_43 = R_49+R_43; R_43 = R_24*R_43;
                R_43 = R_44+R_43; R_43 = R_24*R_43; R_44 = Rationnal(-8,1)*R_92; R_44 = R_55+R_44;
                R_44 = R_24*R_44; R_50 = R_48+R_44; R_39 = R_14*R_50; R_39 = Rationnal(4,1)*R_39;
                R_50 = R_24*R_50; R_45 = R_44+R_45; R_45 = R_24*R_45; R_45 = R_76+R_45;
                R_76 = Rationnal(-20,1)*R_92; R_76 = R_54+R_76; R_76 = R_24*R_76; R_76 = R_46+R_76;
                R_76 = R_14*R_76; R_76 = Rationnal(2,1)*R_76; R_46 = Rationnal(6,1)*R_92; R_46 = R_49+R_46;
                R_54 = R_5*R_46; R_54 = Rationnal(48,1)*R_54; R_44 = R_7*R_46; R_44 = Rationnal(12,1)*R_44;
                R_46 = R_14*R_46; R_46 = Rationnal(4,1)*R_46; R_51 = Rationnal(-10,1)*R_92; R_51 = R_55+R_51;
                Ex R_94 = R_7*R_51; R_94 = Rationnal(6,1)*R_94; Ex R_95 = R_14*R_51; R_95 = Rationnal(2,1)*R_95;
                R_41 = R_95+R_41; R_51 = R_24*R_51; R_51 = R_47+R_51; R_51 = R_24*R_51;
                R_47 = Rationnal(-14,1)*R_92; R_47 = R_55+R_47; R_47 = R_24*R_47; R_47 = R_48+R_47;
                R_47 = R_24*R_47; R_47 = R_31+R_47; R_31 = R_5*R_47; R_31 = Rationnal(240,1)*R_31;
                R_48 = R_7*R_47; R_48 = Rationnal(36,1)*R_48; R_95 = R_14*R_47; R_95 = Rationnal(6,1)*R_95;
                R_95 = R_86+R_95; R_47 = R_24*R_47; R_47 = R_87+R_47; R_87 = Rationnal(4,1)*R_92;
                R_87 = R_49+R_87; R_86 = R_2*R_87; R_86 = Rationnal(720,1)*R_86; R_11 = R_86+R_11;
                R_86 = R_3*R_87; R_86 = Rationnal(120,1)*R_86; Ex R_96 = R_5*R_87; Ex R_97 = Rationnal(-24,1)*R_96;
                R_97 = R_30+R_97; R_97 = R_12+R_97; R_19 = R_97+R_19; R_23 = R_19+R_23;
                R_96 = Rationnal(24,1)*R_96; R_19 = R_7*R_87; R_97 = Rationnal(-12,1)*R_19; R_33 = R_97+R_33;
                R_16 = R_33+R_16; R_16 = R_70+R_16; R_70 = Rationnal(-6,1)*R_19; R_70 = R_32+R_70;
                R_77 = R_70+R_77; R_10 = R_77+R_10; R_10 = R_24*R_10; R_10 = Rationnal(4,1)*R_10;
                R_19 = Rationnal(6,1)*R_19; R_47 = R_19+R_47; R_47 = Rationnal(-1,1)*R_47; R_87 = R_14*R_87;
                R_19 = Rationnal(-2,1)*R_87; R_19 = R_37+R_19; R_21 = R_19+R_21; R_19 = R_14*R_21;
                R_77 = Rationnal(2,1)*R_19; R_77 = R_26+R_77; R_77 = Rationnal(20,1)*R_77; R_19 = Rationnal(8,1)*R_19;
                R_21 = Rationnal(4,1)*R_21; R_87 = Rationnal(2,1)*R_87; R_87 = R_13+R_87; R_87 = Rationnal(-1,1)*R_87;
                R_13 = Rationnal(2,1)*R_92; R_13 = R_49+R_13; R_2 = R_2*R_13; R_2 = Rationnal(-10800,1)*R_2;
                R_49 = R_3*R_13; R_49 = Rationnal(-1200,1)*R_49; R_26 = R_5*R_13; R_26 = Rationnal(-144,1)*R_26;
                R_70 = R_7*R_13; R_70 = Rationnal(-18,1)*R_70; R_91 = R_70+R_91; R_13 = R_14*R_13;
                R_13 = Rationnal(-2,1)*R_13; R_88 = R_13+R_88; R_88 = R_37+R_88; R_87 = R_88+R_87;
                R_87 = Rationnal(1,24)*R_87; r[4] = R_87; R_92 = Rationnal(-6,1)*R_92; R_55 = R_92+R_55;
                R_55 = R_24*R_55; R_42 = R_55+R_42; R_55 = R_14*R_42; R_92 = R_5*R_42;
                R_92 = Rationnal(96,1)*R_92; R_87 = R_7*R_42; R_88 = Rationnal(60,1)*R_87; R_6 = R_88+R_6;
                R_87 = Rationnal(12,1)*R_87; R_42 = Rationnal(1,6)*R_42; r[3] = R_42; R_8 = R_17*R_8;
                R_57 = R_8+R_57; R_57 = R_24*R_57; R_57 = R_79+R_57; R_57 = R_24*R_57;
                R_57 = Rationnal(12,1)*R_57; R_18 = R_57+R_18; R_93 = R_18+R_93; R_93 = R_7*R_93;
                R_18 = R_14*R_8; R_18 = Rationnal(-2,1)*R_18; R_18 = R_20+R_18; R_18 = Rationnal(4,1)*R_18;
                R_9 = R_18+R_9; R_9 = Rationnal(-1,1)*R_9; R_9 = R_27+R_9; R_9 = R_14*R_9;
                R_9 = Rationnal(2,1)*R_9; R_9 = R_23+R_9; R_9 = R_24*R_9; R_9 = R_25+R_9;
                R_9 = Rationnal(4,1)*R_9; R_25 = Rationnal(31,1)*R_8; R_60 = R_25+R_60; R_60 = R_24*R_60;
                R_60 = R_80+R_60; R_60 = R_14*R_60; R_60 = Rationnal(2,1)*R_60; R_52 = R_60+R_52;
                R_60 = Rationnal(3,1)*R_8; R_61 = R_60+R_61; R_61 = R_24*R_61; R_69 = R_61+R_69;
                R_69 = R_24*R_69; R_40 = R_69+R_40; R_40 = R_71+R_40; R_40 = R_14*R_40;
                R_40 = Rationnal(2,1)*R_40; R_71 = Rationnal(2,1)*R_8; R_62 = R_71+R_62; R_62 = R_24*R_62;
                R_62 = R_81+R_62; R_62 = R_14*R_62; R_62 = Rationnal(2,1)*R_62; R_94 = R_62+R_94;
                R_35 = R_94+R_35; R_94 = Rationnal(-8,1)*R_8; R_63 = R_94+R_63; R_63 = R_14*R_63;
                R_63 = R_45+R_63; R_45 = R_14*R_63; R_45 = Rationnal(8,1)*R_45; R_63 = R_24*R_63;
                R_64 = R_8+R_64; R_94 = R_14*R_64; R_94 = Rationnal(2,1)*R_94; R_75 = R_94+R_75;
                R_43 = R_75+R_43; R_43 = R_24*R_43; R_43 = R_35+R_43; R_43 = R_24*R_43;
                R_64 = R_24*R_64; R_64 = R_82+R_64; R_64 = R_24*R_64; R_64 = R_41+R_64;
                R_64 = R_24*R_64; R_8 = Rationnal(-1,1)*R_8; R_58 = R_8+R_58; R_58 = R_24*R_58;
                R_58 = R_83+R_58; R_58 = Rationnal(-1,1)*R_58; R_58 = R_68+R_58; R_58 = R_14*R_58;
                R_58 = Rationnal(2,1)*R_58; R_58 = R_16+R_58; R_58 = R_14*R_58; R_58 = Rationnal(8,1)*R_58;
                R_59 = R_8+R_59; R_16 = R_7*R_59; R_16 = R_55+R_16; R_16 = Rationnal(6,1)*R_16;
                R_59 = R_14*R_59; R_59 = Rationnal(2,1)*R_59; R_50 = R_59+R_50; R_50 = Rationnal(-5,1)*R_50;
                R_65 = R_8+R_65; R_65 = R_24*R_65; R_65 = R_83+R_65; R_83 = R_7*R_65;
                R_83 = Rationnal(30,1)*R_83; R_59 = R_14*R_65; R_59 = Rationnal(6,1)*R_59; R_63 = R_59+R_63;
                R_63 = R_44+R_63; R_44 = R_14*R_63; R_44 = Rationnal(4,1)*R_44; R_63 = R_24*R_63;
                R_65 = R_24*R_65; R_46 = R_65+R_46; R_65 = R_7*R_46; R_65 = Rationnal(6,1)*R_65;
                R_59 = R_14*R_46; R_55 = Rationnal(-10,1)*R_59; R_59 = Rationnal(2,1)*R_59; R_59 = R_63+R_59;
                R_59 = Rationnal(-1,1)*R_59; R_36 = R_59+R_36; R_46 = Rationnal(-1,1)*R_46; R_21 = R_46+R_21;
                R_21 = R_24*R_21; R_66 = R_8+R_66; R_46 = R_5*R_66; R_46 = Rationnal(24,1)*R_46;
                R_46 = R_67+R_46; R_46 = R_53+R_46; R_46 = R_40+R_46; R_46 = R_43+R_46;
                R_46 = R_14*R_46; R_46 = Rationnal(-2,1)*R_46; R_43 = R_7*R_66; R_43 = Rationnal(6,1)*R_43;
                R_43 = R_72+R_43; R_64 = R_43+R_64; R_76 = R_64+R_76; R_64 = R_7*R_76;
                R_64 = Rationnal(-36,1)*R_64; R_64 = R_46+R_64; R_76 = R_14*R_76; R_76 = Rationnal(-2,1)*R_76;
                R_46 = R_14*R_66; R_46 = Rationnal(2,1)*R_46; R_46 = R_78+R_46; R_51 = R_46+R_51;
                R_46 = R_5*R_51; R_46 = Rationnal(-360,1)*R_46; R_78 = R_7*R_51; R_78 = Rationnal(-30,1)*R_78;
                R_51 = R_14*R_51; R_51 = Rationnal(-2,1)*R_51; R_66 = R_24*R_66; R_66 = R_73+R_66;
                R_73 = R_3*R_66; R_73 = Rationnal(-2400,1)*R_73; R_64 = R_73+R_64; R_64 = R_0+R_64;
                R_64 = R_2+R_64; R_64 = R_1+R_64; R_46 = R_64+R_46; R_64 = R_5*R_66;
                R_64 = Rationnal(-240,1)*R_64; R_64 = R_49+R_64; R_64 = R_28+R_64; R_64 = R_89+R_64;
                R_64 = R_78+R_64; R_64 = R_76+R_64; R_76 = R_7*R_66; R_76 = Rationnal(-24,1)*R_76;
                R_51 = R_76+R_51; R_51 = R_90+R_51; R_51 = R_30+R_51; R_51 = R_26+R_51;
                R_66 = R_14*R_66; R_66 = Rationnal(-2,1)*R_66; R_91 = R_66+R_91; R_47 = R_91+R_47;
                R_47 = Rationnal(1,120)*R_47; r[5] = R_47; R_8 = R_56+R_8; R_3 = R_3*R_8;
                R_3 = Rationnal(480,1)*R_3; R_56 = R_14*R_8; R_56 = Rationnal(-30,1)*R_56; R_56 = R_74+R_56;
                R_22 = R_56+R_22; R_22 = R_50+R_22; R_22 = R_24*R_22; R_22 = R_52+R_22;
                R_22 = R_24*R_22; R_5 = R_5*R_8; R_52 = Rationnal(240,1)*R_5; R_52 = R_6+R_52;
                R_52 = R_55+R_52; R_22 = R_52+R_22; R_22 = R_77+R_22; R_22 = R_14*R_22;
                R_22 = Rationnal(2,1)*R_22; R_5 = Rationnal(48,1)*R_5; R_36 = R_5+R_36; R_36 = R_87+R_36;
                R_36 = R_19+R_36; R_36 = R_10+R_36; R_36 = R_15+R_36; R_36 = R_24*R_36;
                R_36 = R_86+R_36; R_36 = R_48+R_36; R_48 = R_7*R_8; R_86 = Rationnal(54,1)*R_48;
                R_86 = R_34+R_86; R_86 = R_39+R_86; R_86 = R_16+R_86; R_84 = R_86+R_84;
                R_84 = R_24*R_84; R_45 = R_84+R_45; R_83 = R_45+R_83; R_54 = R_83+R_54;
                R_54 = R_24*R_54; R_54 = R_44+R_54; R_54 = R_65+R_54; R_54 = Rationnal(-1,1)*R_54;
                R_9 = R_54+R_9; R_9 = R_4+R_9; R_9 = R_58+R_9; R_9 = R_3+R_9;
                R_9 = R_92+R_9; R_93 = R_9+R_93; R_93 = R_24*R_93; R_11 = R_93+R_11;
                R_11 = R_22+R_11; R_48 = Rationnal(12,1)*R_48; R_48 = R_38+R_48; R_29 = R_48+R_29;
                R_21 = R_29+R_21; R_7 = R_7*R_21; R_7 = Rationnal(60,1)*R_7; R_31 = R_7+R_31;
                R_31 = R_11+R_31; R_31 = Rationnal(-1,1)*R_31; R_31 = R_46+R_31; R_31 = Rationnal(1,40320)*R_31;
                r[8] = R_31; R_14 = R_14*R_21; R_14 = Rationnal(8,1)*R_14; R_14 = R_85+R_14;
                R_36 = R_14+R_36; R_36 = Rationnal(-1,1)*R_36; R_36 = R_64+R_36; R_36 = Rationnal(1,5040)*R_36;
                r[7] = R_36; R_21 = R_24*R_21; R_21 = R_96+R_21; R_95 = R_21+R_95;
                R_95 = Rationnal(-1,1)*R_95; R_95 = R_51+R_95; R_95 = Rationnal(1,720)*R_95; r[6] = R_95;
                R_8 = Rationnal(1,2)*R_8; r[2] = R_8; 
                break;
            }
            #endif // WANT_SERIES_789
            default:
                th->add_error( "TODO : PolynomialExpansion for type "+std::string(Nstring(a->type))+" and order > 9 -> see file 'ex.cpp'.", tok );
        }
    }
}

